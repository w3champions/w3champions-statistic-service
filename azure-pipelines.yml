name: $(Build.BuildID)

pool:
  vmImage: 'ubuntu-18.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      if(!("$(Build.Reason)".Equals("PullRequest"))){
        Write-Host "##vso[task.setvariable variable=BuildVersioning]$(Build.BuildID)"
        Write-Host "##vso[task.setvariable variable=IsLatest]latest"
        Write-Host "Masterversion: $(Build.BuildID)"
      } else {
        Write-Host "##vso[task.setvariable variable=BuildVersioning]dev-$(System.PullRequest.PullRequestNumber)"
        Write-Host "##vso[task.setvariable variable=IsLatest]"
        Write-Host "PR-Version: dev-$(System.PullRequest.PullRequestNumber)"
      }


- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'

- task: Docker@2
  inputs:
    containerRegistry: 'official-docker-modmoto'
    repository: 'modmoto/w3champions-statistic-service'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    buildContext: '.'
    tags: |
      $(BuildVersioning)
      $(IsLatest)

- task: CopyFiles@2
  inputs:
    Contents: 'test.env'
    TargetFolder: '$(build.artifactstagingdirectory)'
    OverWrite: true
    flattenFolders: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
